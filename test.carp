(load-and-use Test)

(load "./subprocess.carp")

(Debug.sanitize-addresses)

(defn test-args []
  [@"sh" @"-c" @"echo 'this is stderr' 1>&2; echo 'this is stdout'; exit 42"])

(def pipe-all (Subprocess.cmd (SubprocessOptions.pipe) &(test-args)))

(def print-all (Subprocess.cmd (SubprocessOptions.std) &(test-args)))

(def fold-err-into-out (Subprocess.cmd (SubprocessOptions.pipe-combine) &(test-args)))

(def fold-err-into-out-large
     (Subprocess.cmd (SubprocessOptions.pipe-combine)
                     &[@"printf" (String.repeat 10000 "wow")]))

(deftest test
  (assert-equal test
                &(Just @"this is stdout\n")
                (SubprocessRes.out &pipe-all)
                "pipe - out works with small output")
  (assert-equal test
                &(Just @"this is stderr\n")
                (SubprocessRes.err &pipe-all)
                "pipe - err works with small output")
  (assert-equal test
                &42
                (SubprocessRes.exit-code &pipe-all)
                "pipe - exit-code works with small output")

  (assert-equal test
                &(Nothing)
                (SubprocessRes.out &print-all)
                "print - out works with small output")
  (assert-equal test
                &(Nothing)
                (SubprocessRes.err &print-all)
                "print - err works with small output")
  (assert-equal test
                &42
                (SubprocessRes.exit-code &print-all)
                "print - exit-code works with small output")

  (assert-equal test
                &(Just @"this is stderr\nthis is stdout\n")
                (SubprocessRes.out &fold-err-into-out)
                "combine - out works with small output")
  (assert-equal test
                &(Nothing)
                (SubprocessRes.err &fold-err-into-out)
                "combine - err works with small output")
  (assert-equal test
                &42
                (SubprocessRes.exit-code &fold-err-into-out)
                "combine - exit-code works with small output")

  (assert-equal test
                &(Just (String.repeat 10000 "wow"))
                (SubprocessRes.out &fold-err-into-out-large)
                "combine - out works with large output")
  (assert-equal test
                &(Nothing)
                (SubprocessRes.err &fold-err-into-out-large)
                "combine - err works with large output")
  (assert-equal test
                &0
                (SubprocessRes.exit-code &fold-err-into-out-large)
                "combine - exit-code works with large output"))
