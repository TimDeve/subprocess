(load-and-use Test)

(load "./subprocess.carp")

(Debug.sanitize-addresses)

(def pipe-all (SubProcess.cmd (SubProcessOptions.pipe)
                              &[@"sh" @"-c" @"echo 'this is stderr' 1>&2; echo 'this is stdout'; exit 42"]))

(def print-all (SubProcess.cmd (SubProcessOptions.std)
                               &[@"sh" @"-c" @"echo 'this is stderr' 1>&2; echo 'this is stdout'; exit 42"]))

(def fold-err-into-out
     (SubProcess.cmd (SubProcessOptions.pipe-combine)
                     &[@"sh" @"-c" @"echo 'this is stderr' 1>&2; echo 'this is stdout'; exit 42"]))

(def fold-err-into-out-large
     (SubProcess.cmd (SubProcessOptions.pipe-combine)
                     &[@"printf" (String.repeat 10000 "wow")]))

(deftest test
  (assert-equal test
                &(Just @"this is stdout\n")
                (SubProcess.out &pipe-all)
                "pipe - out works with small output")
  (assert-equal test
                &(Just @"this is stderr\n")
                (SubProcess.err &pipe-all)
                "pipe - err works with small output")
  (assert-equal test
                &42
                (SubProcess.exit-code &pipe-all)
                "pipe - exit-code works with small output")

  (assert-equal test
                &(Nothing)
                (SubProcess.out &print-all)
                "print - out works with small output")
  (assert-equal test
                &(Nothing)
                (SubProcess.err &print-all)
                "print - err works with small output")
  (assert-equal test
                &42
                (SubProcess.exit-code &print-all)
                "print - exit-code works with small output")

  (assert-equal test
                &(Just @"this is stderr\nthis is stdout\n")
                (SubProcess.out &fold-err-into-out)
                "combine - out works with small output")
  (assert-equal test
                &(Nothing)
                (SubProcess.err &fold-err-into-out)
                "combine - err works with small output")
  (assert-equal test
                &42
                (SubProcess.exit-code &fold-err-into-out)
                "combine - exit-code works with small output")

  (assert-equal test
                &(Just (String.repeat 10000 "wow"))
                (SubProcess.out &fold-err-into-out-large)
                "combine - out works with small output")
  (assert-equal test
                &(Nothing)
                (SubProcess.err &fold-err-into-out-large)
                "combine - err works with small output")
  (assert-equal test
                &0
                (SubProcess.exit-code &fold-err-into-out-large)
                "combine - exit-code works with small output"))
